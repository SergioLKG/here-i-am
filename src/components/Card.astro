---
import { siJavascript, siReact } from "simple-icons/icons";
interface TechIcons {
  [key: string]: string;
}

interface SocialColors {
  [key: string]: string;
}
const { title, description, image, tecnologias = [], links = {} } = Astro.props;

const techIcons: TechIcons = {
  javascript: "/icons/js.svg",
  python: "/icons/python.svg",
  react: "/icons/react.svg",
};

const socialColors: SocialColors = {
  linkedin: "text-blue-500",
  github: "text-gray-500",
  twitter: "text-sky-500",
};
---

<div
  class="bg-primary-a70 hover:bg-primary-a80 select-none shadow-lg p-4 rounded-lg transition-all active:translate-y-1 cursor-pointer card flex flex-col gap-4"
>
  <div class="rounded-t-lg overflow-hidden aspect-[16/9]">
    <img src={image} alt={title} class="w-full h-full object-cover" />
  </div>

  <div class="card-content flex flex-col gap-2">
    <h3 class="font-semibold text-xl">{title}</h3>
    <p class="mt-2 text-gray-300 text-sm">{description}</p>

    {
      tecnologias.length > 0 && (
        <div class="flex flex-wrap gap-2 mt-2">
          {tecnologias.map((tech: string) => (
            <img
              src={techIcons[tech] || "/icons/default-tech.svg"}
              alt={tech}
              class="w-6 h-6"
            />
          ))}
        </div>
      )
    }

    {
      Object.entries(links).length > 0 && (
        <div class="flex gap-4 mt-4">
          {Object.entries(links).map(([key, value]) => (
            <a
              href={value as string}
              target="_blank"
              rel="noopener noreferrer"
              class={`p-2 rounded-full bg-primary-a80 hover:bg-primary-a90 ${socialColors[key] || "text-gray-300"} transition`}
              title={key}
            >
              {socialColors[key] ? (
                <span class={`icon icon-${key}`} />
              ) : (
                <span>{key}</span>
              )}
            </a>
          ))}
        </div>
      )
    }
  </div>
</div>
